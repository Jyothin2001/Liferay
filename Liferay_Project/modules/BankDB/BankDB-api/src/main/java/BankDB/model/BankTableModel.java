/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package BankDB.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the BankTable service. Represents a row in the &quot;B_BankTable&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>BankDB.model.impl.BankTableModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>BankDB.model.impl.BankTableImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BankTable
 * @generated
 */
@ProviderType
public interface BankTableModel
	extends BaseModel<BankTable>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a bank table model instance should use the {@link BankTable} interface instead.
	 */

	/**
	 * Returns the primary key of this bank table.
	 *
	 * @return the primary key of this bank table
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this bank table.
	 *
	 * @param primaryKey the primary key of this bank table
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this bank table.
	 *
	 * @return the uuid of this bank table
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this bank table.
	 *
	 * @param uuid the uuid of this bank table
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the b ID of this bank table.
	 *
	 * @return the b ID of this bank table
	 */
	public long getBId();

	/**
	 * Sets the b ID of this bank table.
	 *
	 * @param BId the b ID of this bank table
	 */
	public void setBId(long BId);

	/**
	 * Returns the group ID of this bank table.
	 *
	 * @return the group ID of this bank table
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this bank table.
	 *
	 * @param groupId the group ID of this bank table
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this bank table.
	 *
	 * @return the company ID of this bank table
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this bank table.
	 *
	 * @param companyId the company ID of this bank table
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this bank table.
	 *
	 * @return the user ID of this bank table
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this bank table.
	 *
	 * @param userId the user ID of this bank table
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this bank table.
	 *
	 * @return the user uuid of this bank table
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this bank table.
	 *
	 * @param userUuid the user uuid of this bank table
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this bank table.
	 *
	 * @return the user name of this bank table
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this bank table.
	 *
	 * @param userName the user name of this bank table
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this bank table.
	 *
	 * @return the create date of this bank table
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this bank table.
	 *
	 * @param createDate the create date of this bank table
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this bank table.
	 *
	 * @return the modified date of this bank table
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this bank table.
	 *
	 * @param modifiedDate the modified date of this bank table
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the account_ number of this bank table.
	 *
	 * @return the account_ number of this bank table
	 */
	public long getAccount_Number();

	/**
	 * Sets the account_ number of this bank table.
	 *
	 * @param Account_Number the account_ number of this bank table
	 */
	public void setAccount_Number(long Account_Number);

	/**
	 * Returns the account_ type of this bank table.
	 *
	 * @return the account_ type of this bank table
	 */
	@AutoEscape
	public String getAccount_Type();

	/**
	 * Sets the account_ type of this bank table.
	 *
	 * @param Account_Type the account_ type of this bank table
	 */
	public void setAccount_Type(String Account_Type);

	/**
	 * Returns the ifsc_ code of this bank table.
	 *
	 * @return the ifsc_ code of this bank table
	 */
	@AutoEscape
	public String getIFSC_Code();

	/**
	 * Sets the ifsc_ code of this bank table.
	 *
	 * @param IFSC_Code the ifsc_ code of this bank table
	 */
	public void setIFSC_Code(String IFSC_Code);

	/**
	 * Returns the account_ status of this bank table.
	 *
	 * @return the account_ status of this bank table
	 */
	@AutoEscape
	public String getAccount_Status();

	/**
	 * Sets the account_ status of this bank table.
	 *
	 * @param Account_Status the account_ status of this bank table
	 */
	public void setAccount_Status(String Account_Status);

	/**
	 * Returns the status of this bank table.
	 *
	 * @return the status of this bank table
	 */
	public int getStatus();

	/**
	 * Sets the status of this bank table.
	 *
	 * @param status the status of this bank table
	 */
	public void setStatus(int status);

	@Override
	public BankTable cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}